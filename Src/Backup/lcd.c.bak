#include "lcd.h"

extern I2C_HandleTypeDef hi2c2;
uint8_t buf[1] = {0};
char strl[100];
uint8_t portlcd = 0; // WTF???

void WriteByteI2CLCD(uint8_t bt){
    buf[0] = bt;
    HAL_I2C_Master_Transmit(&hi2c2, LCD_ADDR, buf, 1, HAL_MAX_DELAY);
}

void sendhalfbyte(uint8_t c){
    c = c << 4;
    e_set();
    HAL_Delay(LCD_DELAY_MS);
    WriteByteI2CLCD(portlcd | c);
    e_reset();
    HAL_Delay(LCD_DELAY_MS);
}

void sendbyte(uint8_t c, uint8_t mode){
    if (mode == 0) {
        rs_reset();
    } else {
        rs_set();
    }
    uint8_t hc = c >> 4 ;
    sendhalfbyte(hc);
    sendhalfbyte(c);
}

void LCD_Clear(void){
    sendbyte(0x01, 0);
    HAL_Delay(15);
}

void LCD_SendChar(char ch){
    sendbyte(ch, 1);
}

void LCD_SetPos(uint8_t x, uint8_t y){
    switch (y)
    {
        /***** DDRAM adresses
         * 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
         * 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F
         * 
         * */
        case 0:
            sendbyte(x | 0x80, 0);
            HAL_Delay(1);
            break;
        case 1:
            sendbyte( (0x40+x) | 0x80, 0 );
            HAL_Delay(1);
            break;
    }
}

void LCD_Init(void){
    HAL_Delay(15);
    sendhalfbyte(0x03);
    HAL_Delay(4);
    sendhalfbyte(0x03);
    HAL_Delay(1);
    sendhalfbyte(0x03);
    HAL_Delay(1);
    sendhalfbyte(0x02);
    HAL_Delay(1);
    sendbyte(0x28, 0); //4бит-режим (DL=0) и 2 линии (N=1)
    HAL_Delay(1);
    sendbyte(0x0C, 0); //включаем изображение на дисплее (D=1), курсоры никакие не включаем (C=0, B=0)
    HAL_Delay(1);
    sendbyte(0x6, 0); //курсор (хоть он у нас и невидимый) будет двигаться влево
    HAL_Delay(1);
    set_led();//подсветка
    set_write();//запись
}

void LCD_SendString(char *st){
    uint8_t i = 0;
    while(st[i] != 0){
        sendbyte((uint8_t)st[i], 1);
        i++;
    };
}
